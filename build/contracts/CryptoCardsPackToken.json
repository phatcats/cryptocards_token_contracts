{
  "contractName": "CryptoCardsPackToken",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "fastTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "BatchTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "packDataById",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalMintedPacks",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "packData",
          "type": "string"
        }
      ],
      "name": "mintPack",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnPack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"packDataById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"fastTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"packData\",\"type\":\"string\"}],\"name\":\"mintPack\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnPack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMintedPacks\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"BatchTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"fastTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Crypto-Cards ERC721 Pack Token ERC721-compliant token representing individual Packs\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsPackToken.sol\":\"CryptoCardsPackToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsERC721Batched.sol\":{\"keccak256\":\"0x87401dd3c8992cb40ffd65dd0b78c5f30c0027f89ce70603ce383dd0fa0d82bf\",\"urls\":[\"bzzr://37cc638e022bc908dfb70a2f76b8a5252641c4436989cd10071fa9fbbe345608\"]},\"/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsPackToken.sol\":{\"keccak256\":\"0x8080ff4e2c546ab7a849b3d3975db763f7f2348e1be29021e1d44d5849fa8db8\",\"urls\":[\"bzzr://a69cb9316cd580e962036fe1aea642907e9fafb6b80226034630d882c7c027c5\"]},\"/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/ERC721.sol\":{\"keccak256\":\"0x1ed339d198b601587742fff80d9da57ea238fa75cb1574915287b1eaaf0b69b1\",\"urls\":[\"bzzr://b85e79e03c798d7dcfe2f6670491ece94aa363574d2ec5bb173b18cd48958610\"]},\"/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0xc9fd4dd4183c875675657bd640d682e58b98e0a410110857e5981362c2790215\",\"urls\":[\"bzzr://db55cec12383dad41624b1632701ddd3110596637fba90fd0a10652b31fa90b1\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040805190810160405280601281526020017f43727970746f2d4361726473205061636b7300000000000000000000000000008152506040805190810160405280600581526020017f5041434b53000000000000000000000000000000000000000000000000000000815250606060405190810160405280602281526020017f68747470733a2f2f63727970746f2d63617264732e696f2f7061636b2d696e6681526020017f6f2f000000000000000000000000000000000000000000000000000000000000815250620001186301ffc9a77c010000000000000000000000000000000000000000000000000000000002620002fb640100000000026401000000009004565b620001556380ac58cd7c010000000000000000000000000000000000000000000000000000000002620002fb640100000000026401000000009004565b6200019263780e9d637c010000000000000000000000000000000000000000000000000000000002620002fb640100000000026401000000009004565b620001cf635b5e139f7c010000000000000000000000000000000000000000000000000000000002620002fb640100000000026401000000009004565b8260099080519060200190620001e79291906200069f565b5081600a9080519060200190620002009291906200069f565b5080600b9080519060200190620002199291906200069f565b50505050620002373362000422640100000000026401000000009004565b33600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200074e565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620003b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200044681600d6200048c640100000000026200381d179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620004a782826200057b640100000000026401000000009004565b1515156200051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000648576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006e257805160ff191683800117855562000713565b8280016001018555821562000713579182015b8281111562000712578251825591602001919060010190620006f5565b5b50905062000722919062000726565b5090565b6200074b91905b80821115620007475760008160009055506001016200072d565b5090565b90565b613bcc806200075e6000396000f3fe6080604052600436106101a1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101a657806306fdde0314610218578063081812fc146102a8578063095ea7b3146103235780630d8e6e2c1461037e57806315eaef6b1461040e57806318160ddd1461048957806323b872dd146104b45780632f745c591461052f578063314903e01461059e5780633b59d2f61461065257806342842e0e146106cd5780634f558e79146107485780634f6ccce71461079b5780636352211e146107ea57806370a0823114610865578063715018a6146108ca5780637273b299146108e15780637977d5b9146109dd5780638da5cb5b14610a385780638f32d59b14610a8f57806395d89b4114610abe578063983b2d5614610b4e5780639865027514610b9f578063a22cb46514610bb6578063aa271e1a14610c13578063ae70e17a14610c7c578063b88d4fde14610ca7578063c87b56dd14610db9578063d26ea6c014610e6d578063e985e9c514610ebe578063f2fde38b14610f47578063f3993d1114610f98575b600080fd5b3480156101b257600080fd5b506101fe600480360360208110156101c957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061109d565b604051808215151515815260200191505060405180910390f35b34801561022457600080fd5b5061022d611104565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026d578082015181840152602081019050610252565b50505050905090810190601f16801561029a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102b457600080fd5b506102e1600480360360208110156102cb57600080fd5b81019080803590602001909291905050506111a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032f57600080fd5b5061037c6004803603604081101561034657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f7565b005b34801561038a57600080fd5b5061039361133c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d35780820151818401526020810190506103b8565b50505050905090810190601f1680156104005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561041a57600080fd5b506104876004803603606081101561043157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611379565b005b34801561049557600080fd5b5061049e61142c565b6040518082815260200191505060405180910390f35b3480156104c057600080fd5b5061052d600480360360608110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611439565b005b34801561053b57600080fd5b506105886004803603604081101561055257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061145e565b6040518082815260200191505060405180910390f35b3480156105aa57600080fd5b506105d7600480360360208110156105c157600080fd5b81019080803590602001909291905050506114d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106175780820151818401526020810190506105fc565b50505050905090810190601f1680156106445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561065e57600080fd5b506106cb6004803603606081101561067557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611607565b005b3480156106d957600080fd5b50610746600480360360608110156106f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061162c565b005b34801561075457600080fd5b506107816004803603602081101561076b57600080fd5b810190808035906020019092919050505061164d565b604051808215151515815260200191505060405180910390f35b3480156107a757600080fd5b506107d4600480360360208110156107be57600080fd5b810190808035906020019092919050505061165f565b6040518082815260200191505060405180910390f35b3480156107f657600080fd5b506108236004803603602081101561080d57600080fd5b8101908080359060200190929190505050611697565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561087157600080fd5b506108b46004803603602081101561088857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611715565b6040518082815260200191505060405180910390f35b3480156108d657600080fd5b506108df611799565b005b3480156108ed57600080fd5b506109c76004803603604081101561090457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561094157600080fd5b82018360208201111561095357600080fd5b8035906020019184600183028401116401000000008311171561097557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118d6565b6040518082815260200191505060405180910390f35b3480156109e957600080fd5b50610a3660048036036040811015610a0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119ca565b005b348015610a4457600080fd5b50610a4d611ab3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9b57600080fd5b50610aa4611add565b604051808215151515815260200191505060405180910390f35b348015610aca57600080fd5b50610ad3611b35565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b13578082015181840152602081019050610af8565b50505050905090810190601f168015610b405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b5a57600080fd5b50610b9d60048036036020811015610b7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd7565b005b348015610bab57600080fd5b50610bb4611c86565b005b348015610bc257600080fd5b50610c1160048036036040811015610bd957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611c91565b005b348015610c1f57600080fd5b50610c6260048036036020811015610c3657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dcd565b604051808215151515815260200191505060405180910390f35b348015610c8857600080fd5b50610c91611dea565b6040518082815260200191505060405180910390f35b348015610cb357600080fd5b50610db760048036036080811015610cca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610d3157600080fd5b820183602082011115610d4357600080fd5b80359060200191846001830284011164010000000083111715610d6557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611df4565b005b348015610dc557600080fd5b50610df260048036036020811015610ddc57600080fd5b8101908080359060200190929190505050611e1c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e32578082015181840152602081019050610e17565b50505050905090810190601f168015610e5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e7957600080fd5b50610ebc60048036036020811015610e9057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f9b565b005b348015610eca57600080fd5b50610f2d60048036036040811015610ee157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612023565b604051808215151515815260200191505060405180910390f35b348015610f5357600080fd5b50610f9660048036036020811015610f6a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612170565b005b348015610fa457600080fd5b5061109b60048036036060811015610fbb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561101857600080fd5b82018360208201111561102a57600080fd5b8035906020019184602083028401116401000000008311171561104c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506121f8565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561119c5780601f106111715761010080835404028352916020019161119c565b820191906000526020600020905b81548152906001019060200180831161117f57829003601f168201915b5050505050905090565b60006111b1826123a4565b15156111bc57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061120282611697565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561123f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061127f575061127e8133612023565b5b151561128a57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60606040805190810160405280600681526020017f76322e322e310000000000000000000000000000000000000000000000000000815250905090565b61138233611dcd565b151561141c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b611427838383612416565b505050565b6000600780549050905090565b611443338261243a565b151561144e57600080fd5b611459838383612416565b505050565b600061146983611715565b8210151561147657600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114c257fe5b9060005260206000200154905092915050565b60606114e0826123a4565b1515611554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420746f6b656e496420737570706c696564000000000000000081525060200191505060405180910390fd5b601060008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115fb5780601f106115d0576101008083540402835291602001916115fb565b820191906000526020600020905b8154815290600101906020018083116115de57829003601f168201915b50505050509050919050565b611611338261243a565b151561161c57600080fd5b6116278383836124cf565b505050565b6116488383836020604051908101604052806000815250611df4565b505050565b6000611658826123a4565b9050919050565b600061166961142c565b8210151561167657600080fd5b60078281548110151561168557fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561170c57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561175257600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6117a1611add565b1515611815576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006118e133611dcd565b151561197b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6001600f5401600f819055506000600f54905061199884826124f3565b826010600083815260200190815260200160002090805190602001906119bf929190613acf565b508091505092915050565b6119d333611dcd565b1515611a6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b611a778282612514565b6020604051908101604052806000815250601060008381526020019081526020016000209080519060200190611aae929190613acf565b505050565b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bcd5780601f10611ba257610100808354040283529160200191611bcd565b820191906000526020600020905b815481529060010190602001808311611bb057829003601f168201915b5050505050905090565b611be033611dcd565b1515611c7a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b611c838161254e565b50565b611c8f336125a8565b565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ccc57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000611de382600d61260290919063ffffffff16565b9050919050565b6000600f54905090565b611dff848484611439565b611e0b84848484612725565b1515611e1657600080fd5b50505050565b6060611e27826123a4565b1515611e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20646f65736e27742065786973740000000000000000000000000081525060200191505060405180910390fd5b600b611ea683612948565b6040516020018083805460018160011615610100020316600290048015611f045780601f10611ee2576101008083540402835291820191611f04565b820191906000526020600020905b815481529060010190602001808311611ef0575b505082805190602001908083835b602083101515611f375780518252602082019150602081019050602083039250611f12565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600501925050506040516020818303038152906040529050919050565b611fa3611add565b1515612017576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61202081612aa1565b50565b600080600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c4552791866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120fb57600080fd5b505afa15801561210f573d6000803e3d6000fd5b505050506040513d602081101561212557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141561215c57600191505061216a565b6121668484612ae5565b9150505b92915050565b612178611add565b15156121ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6121f581612b79565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561223457600080fd5b60008090505b8151811015612272576122658484848481518110151561225657fe5b906020019060200201516124cf565b808060010191505061223a565b506122c68151600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d0490919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061235c8151600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d8f90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b612421838383612e19565b61242b838261307e565b6124358282613222565b505050565b60008061244683611697565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806124b557508373ffffffffffffffffffffffffffffffffffffffff1661249d846111a6565b73ffffffffffffffffffffffffffffffffffffffff16145b806124c657506124c58185612023565b5b91505092915050565b6124da8383836132e9565b6124e4838261307e565b6124ee8282613222565b505050565b6124fd82826133e6565b6125078282613222565b6125108161357f565b5050565b61251e82826135cb565b612528828261307e565b6000600660008381526020019081526020016000208190555061254a8161375f565b5050565b61256281600d61381d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6125bc81600d6138fa90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006127468473ffffffffffffffffffffffffffffffffffffffff166139fc565b15156127555760019050612940565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561284c578082015181840152602081019050612831565b50505050905090810190601f1680156128795780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561289b57600080fd5b505af11580156128af573d6000803e3d6000fd5b505050506040513d60208110156128c557600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60606000821415612990576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612a9c565b600082905060005b6000821415156129be578080600101915050600a828115156129b657fe5b049150612998565b6060816040519080825280601f01601f1916602001820160405280156129f35781602001600182028038833980820191505090505b50905060006001830390505b600086141515612a9457600a86811515612a1557fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515612a5057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612a8c57fe5b0495506129ff565b819450505050505b919050565b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612c44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211151515612d7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110151515612e0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612e3982611697565b73ffffffffffffffffffffffffffffffffffffffff16141515612e5b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612e9757600080fd5b612ea081613a0f565b612ef36001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d0490919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612f896001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d8f90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006130d66001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612d0490919063ffffffff16565b905060006006600084815260200190815260200160002054905081811415156131c9576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561314757fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156131a157fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361321b9190613b4f565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8273ffffffffffffffffffffffffffffffffffffffff1661330982611697565b73ffffffffffffffffffffffffffffffffffffffff1614151561332b57600080fd5b61333481613a0f565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561342257600080fd5b61342b816123a4565b15151561343757600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506134dc6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d8f90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8173ffffffffffffffffffffffffffffffffffffffff166135eb82611697565b73ffffffffffffffffffffffffffffffffffffffff1614151561360d57600080fd5b61361681613a0f565b6136696001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d0490919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061377a6001600780549050612d0490919063ffffffff16565b905060006008600084815260200190815260200160002054905060006007838154811015156137a557fe5b90600052602060002001549050806007838154811015156137c257fe5b906000526020600020018190555081600860008381526020019081526020016000208190555060078054809190600190036137fd9190613b4f565b506000600860008681526020019081526020016000208190555050505050565b6138278282612602565b15151561389c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6139048282612602565b151561399e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613acc5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613b1057805160ff1916838001178555613b3e565b82800160010185558215613b3e579182015b82811115613b3d578251825591602001919060010190613b22565b5b509050613b4b9190613b7b565b5090565b815481835581811115613b7657818360005260206000209182019101613b759190613b7b565b5b505050565b613b9d91905b80821115613b99576000816000905550600101613b81565b5090565b9056fea165627a7a72305820a3917db1c629444e5450b11d97838b083b2b592dd6e2a5755d46f103267377e80029",
  "deployedBytecode": "",
  "sourceMap": "439:1708:4:-;;;678:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;678:118:4;1135:234:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40:12;385:10;737:20;;718:18;;;:40;;;:::i;:::-;2071::6;1328:10;2090:20;;2071:18;;;:40;;;:::i;:::-;1309:51:7;924:10;1328:31;;1309:18;;;:51;;;:::i;:::-;1225:49:2;814:10;1244:29;;1225:18;;;:49;;;:::i;:::-;1298:4;1285:10;:17;;;;;;;;;;;;:::i;:::-;;1327:6;1312:12;:21;;;;;;;;;;;;:::i;:::-;;1359:3;1343:13;:19;;;;;;;;;;;;:::i;:::-;;1135:234;;;275:22:11;286:10;275;;;:22;;;:::i;:::-;666:10:15;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;439:1708:4;;1442:190:12;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;737:119:11:-;793:21;806:7;793:8;:12;;;;;;:21;;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;260:175:10:-;337:18;341:4;347:7;337:3;;;:18;;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;439:1708:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "439:1708:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:88:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1500:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1500:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:151:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3870:151:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3870:151:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3293:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3293:292:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3293:292:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1404:90:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1404:90:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1860:133:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1860:133:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1860:133:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:94:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2074:94:7;;;;;;;;;;;;;;;;;;;;;;;5425:180:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5425:180:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5425:180:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:182:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1740:182:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1740:182:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:180:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:180:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;831:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;831:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6038:188:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6038:188:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6038:188:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6865:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6865:132:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6865:132:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:100:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1980:100:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1980:100:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2505:148:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2505:148:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2505:148:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:177:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2695:177:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:177:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:150:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2321:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:15;;;;;;1427:284:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1427:284:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1427:284:4;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1427:284:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1427:284:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1427:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1427:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:137:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1717:137:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:77:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:90:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:92:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1594:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:90:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:90:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;560:90:11;;;;;;;;;;;;;;;;;;;;;;656:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;656:75:11;;;;;;4313:213:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4313:213:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4313:213:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:107:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:99:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1017:99:4;;;;;;;;;;;;;;;;;;;;;;;7702:211:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7702:211:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7702:211:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7702:211:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7702:211:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7702:211:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7702:211:6;;;;;;;;;;;;;;;;;;1692:282:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:282:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1692:282:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1692:282:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2032:113:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2032:113:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2032:113:4;;;;;;;;;;;;;;;;;;;;;;2550:388:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2550:388:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2550:388:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:107:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:15;;;;;;;;;;;;;;;;;;;;;;2086:458:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2086:458:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2086:458:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2086:458:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2086:458:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2086:458:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2086:458:2;;;;;;;;;;;;;;;;;;915:133:12;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1500:88:2:-;1539:13;1571:10;1564:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:88;:::o;3870:151:6:-;3929:7;3956:16;3964:7;3956;:16::i;:::-;3948:25;;;;;;;;3990:15;:24;4006:7;3990:24;;;;;;;;;;;;;;;;;;;;;3983:31;;3870:151;;;:::o;3293:292::-;3356:13;3372:16;3380:7;3372;:16::i;:::-;3356:32;;3412:5;3406:11;;:2;:11;;;;3398:20;;;;;;;;3450:5;3436:19;;:10;:19;;;:58;;;;3459:35;3476:5;3483:10;3459:16;:35::i;:::-;3436:58;3428:67;;;;;;;;3533:2;3506:15;:24;3522:7;3506:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3570:7;3566:2;3550:28;;3559:5;3550:28;;;;;;;;;;;;3293:292;;;:::o;1404:90:2:-;1447:13;1472:15;;;;;;;;;;;;;;;;;;;;1404:90;:::o;1860:133:4:-;350:20:11;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:32:4;1968:4;1974:2;1978:7;1954:13;:32::i;:::-;1860:133;;;:::o;2074:94:7:-;2118:7;2144:10;:17;;;;2137:24;;2074:94;:::o;5425:180:6:-;5515:39;5534:10;5546:7;5515:18;:39::i;:::-;5507:48;;;;;;;;5566:32;5580:4;5586:2;5590:7;5566:13;:32::i;:::-;5425:180;;;:::o;1740:182:7:-;1820:7;1855:16;1865:5;1855:9;:16::i;:::-;1847:5;:24;1839:33;;;;;;;;1889:12;:19;1902:5;1889:19;;;;;;;;;;;;;;;1909:5;1889:26;;;;;;;;;;;;;;;;;;1882:33;;1740:182;;;;:::o;831:180:4:-;891:13;924:16;932:7;924;:16::i;:::-;916:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:9;:18;996:7;986:18;;;;;;;;;;;979:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:180;;;:::o;6038:188:6:-;6132:39;6151:10;6163:7;6132:18;:39::i;:::-;6124:48;;;;;;;;6183:36;6201:4;6207:2;6211:7;6183:17;:36::i;:::-;6038:188;;;:::o;6865:132::-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;1980:100:2:-;2034:4;2057:16;2065:7;2057;:16::i;:::-;2050:23;;1980:100;;;:::o;2505:148:7:-;2563:7;2598:13;:11;:13::i;:::-;2590:5;:21;2582:30;;;;;;;;2629:10;2640:5;2629:17;;;;;;;;;;;;;;;;;;2622:24;;2505:148;;;:::o;2695:177:6:-;2750:7;2769:13;2785:11;:20;2797:7;2785:20;;;;;;;;;;;;;;;;;;;;;2769:36;;2840:1;2823:19;;:5;:19;;;;2815:28;;;;;;;;2860:5;2853:12;;;2695:177;;;:::o;2321:150::-;2376:7;2420:1;2403:19;;:5;:19;;;;2395:28;;;;;;;;2440:17;:24;2458:5;2440:24;;;;;;;;;;;;;;;;2433:31;;2321:150;;;:::o;1599:137:15:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;1427:284:4:-;1508:7;350:20:11;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:1:4;1547:17;;:21;1527:17;:41;;;;1578:15;1596:17;;1578:35;;1623:18;1629:2;1633:7;1623:5;:18::i;:::-;1672:8;1651:9;:18;1661:7;1651:18;;;;;;;;;;;:29;;;;;;;;;;;;:::i;:::-;;1697:7;1690:14;;;1427:284;;;;:::o;1717:137::-;350:20:11;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:20:4;1800:4;1806:7;1794:5;:20::i;:::-;1824:23;;;;;;;;;;;;;:9;:18;1834:7;1824:18;;;;;;;;;;;:23;;;;;;;;;;;;:::i;:::-;;1717:137;;:::o;814:77:15:-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;1594:92:2:-;1635:13;1667:12;1660:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:92;:::o;560:90:11:-;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;:::-;560:90;:::o;656:75::-;699:25;713:10;699:13;:25::i;:::-;656:75::o;4313:213:6:-;4398:10;4392:16;;:2;:16;;;;4384:25;;;;;;;;4456:8;4419:18;:30;4438:10;4419:30;;;;;;;;;;;;;;;:34;4450:2;4419:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4506:2;4479:40;;4494:10;4479:40;;;4510:8;4479:40;;;;;;;;;;;;;;;;;;;;;;4313:213;;:::o;447:107:11:-;503:4;526:21;539:7;526:8;:12;;:21;;;;:::i;:::-;519:28;;447:107;;;:::o;1017:99:4:-;1066:7;1092:17;;1085:24;;1017:99;:::o;7702:211:6:-;7808:31;7821:4;7827:2;7831:7;7808:12;:31::i;:::-;7857:48;7880:4;7886:2;7890:7;7899:5;7857:22;:48::i;:::-;7849:57;;;;;;;;7702:211;;;;:::o;1692:282:2:-;1748:13;1781:16;1789:7;1781;:16::i;:::-;1773:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:13;1910:17;1919:7;1910:8;:17::i;:::-;1845:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1845:121:2;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1845:121:2;;;1831:136;;1692:282;;;:::o;2032:113:4:-;1018:9:15;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2107:31:4;2132:5;2107:24;:31::i;:::-;2032:113;:::o;2550:388:2:-;2630:4;2708:27;2752:21;;;;;;;;;;;2708:66;;2829:8;2788:49;;2796:13;:21;;;2818:5;2796:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:28:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2796:28:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2796:28:2;;;;;;;;;;;;;;;;2788:49;;;2784:91;;;2860:4;2853:11;;;;;2784:91;2892:39;2915:5;2922:8;2892:22;:39::i;:::-;2885:46;;;2550:388;;;;;:::o;1885:107:15:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2086:458:2:-;2205:1;2191:16;;:2;:16;;;;2183:25;;;;;;;;2224:9;2236:1;2224:13;;2219:111;2243:8;:15;2239:1;:19;2219:111;;;2279:40;2297:4;2303:2;2307:8;2316:1;2307:11;;;;;;;;;;;;;;;;;;2279:17;:40::i;:::-;2260:3;;;;;;;2219:111;;;;2366:44;2394:8;:15;2366:17;:23;2384:4;2366:23;;;;;;;;;;;;;;;;:27;;:44;;;;:::i;:::-;2340:17;:23;2358:4;2340:23;;;;;;;;;;;;;;;:70;;;;2444:42;2470:8;:15;2444:17;:21;2462:2;2444:21;;;;;;;;;;;;;;;;:25;;:42;;;;:::i;:::-;2420:17;:21;2438:2;2420:21;;;;;;;;;;;;;;;:66;;;;2086:458;;;:::o;8102:152:6:-;8159:4;8175:13;8191:11;:20;8203:7;8191:20;;;;;;;;;;;;;;;;;;;;;8175:36;;8245:1;8228:19;;:5;:19;;;;8221:26;;;8102:152;;;:::o;3027:239:7:-;3112:38;3132:4;3138:2;3142:7;3112:19;:38::i;:::-;3161:47;3194:4;3200:7;3161:32;:47::i;:::-;3219:40;3247:2;3251:7;3219:27;:40::i;:::-;3027:239;;;:::o;8617:246:6:-;8702:4;8718:13;8734:16;8742:7;8734;:16::i;:::-;8718:32;;8779:5;8768:16;;:7;:16;;;:51;;;;8812:7;8788:31;;:20;8800:7;8788:11;:20::i;:::-;:31;;;8768:51;:87;;;;8823:32;8840:5;8847:7;8823:16;:32::i;:::-;8768:87;8760:96;;;8617:246;;;;:::o;3640:247:7:-;3729:42;3753:4;3759:2;3763:7;3729:23;:42::i;:::-;3782:47;3815:4;3821:7;3782:32;:47::i;:::-;3840:40;3868:2;3872:7;3840:27;:40::i;:::-;3640:247;;;:::o;4142:196::-;4205:24;4217:2;4221:7;4205:11;:24::i;:::-;4240:40;4268:2;4272:7;4240:27;:40::i;:::-;4291;4323:7;4291:31;:40::i;:::-;4142:196;;:::o;5069:364::-;5135:27;5147:5;5154:7;5135:11;:27::i;:::-;5173:48;5206:5;5213:7;5173:32;:48::i;:::-;5369:1;5340:17;:26;5358:7;5340:26;;;;;;;;;;;:30;;;;5381:45;5418:7;5381:36;:45::i;:::-;5069:364;;:::o;737:119:11:-;793:21;806:7;793:8;:12;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;862:127::-;921:24;937:7;921:8;:15;;:24;;;;:::i;:::-;974:7;960:22;;;;;;;;;;;;862:127;:::o;779:200:10:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;12669:343:6:-;12786:4;12811:15;:2;:13;;;:15::i;:::-;12810:16;12806:58;;;12849:4;12842:11;;;;12806:58;12874:13;12906:2;12890:36;;;12927:10;12939:4;12945:7;12954:5;12890:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12890:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12890:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12890:70:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12890:70:6;;;;;;;;;;;;;;;;12874:86;;822:10;12988:16;;12978:26;;;:6;:26;;;;12970:35;;;12669:343;;;;;;;:::o;3443:467:2:-;3492:27;3541:1;3535:2;:7;3531:48;;;3558:10;;;;;;;;;;;;;;;;;;;;;;3531:48;3589:6;3598:2;3589:11;;3610:8;3628:66;3640:1;3635;:6;;3628:66;;;3657:5;;;;;;;3681:2;3676:7;;;;;;;;;;;3628:66;;;3704:17;3734:3;3724:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;3724:14:2;;;;3704:34;;3748:6;3763:1;3757:3;:7;3748:16;;3774:100;3787:1;3781:2;:7;;3774:100;;;3837:2;3832;:7;;;;;;;;3827:2;:12;3816:25;;3804:4;3809:3;;;;;;;3804:9;;;;;;;;;;;;;;:37;;;;;;;;;;;3861:2;3855:8;;;;;;;;;;;3774:100;;;3898:4;3884:19;;;;;;3443:467;;;;:::o;2974:104::-;3066:5;3042:21;;:29;;;;;;;;;;;;;;;;;;2974:104;:::o;4847:145:6:-;4927:4;4950:18;:25;4969:5;4950:25;;;;;;;;;;;;;;;:35;4976:8;4950:35;;;;;;;;;;;;;;;;;;;;;;;;;4943:42;;4847:145;;;;:::o;2093:225:15:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;1274:179:14:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;11069:402:6:-;11182:4;11162:24;;:16;11170:7;11162;:16::i;:::-;:24;;;11154:33;;;;;;;;11219:1;11205:16;;:2;:16;;;;11197:25;;;;;;;;11233:23;11248:7;11233:14;:23::i;:::-;11293:30;11321:1;11293:17;:23;11311:4;11293:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;11267:17;:23;11285:4;11267:23;;;;;;;;;;;;;;;:56;;;;11357:28;11383:1;11357:17;:21;11375:2;11357:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;11333:17;:21;11351:2;11333:21;;;;;;;;;;;;;;;:52;;;;11419:2;11396:11;:20;11408:7;11396:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11456:7;11452:2;11437:27;;11446:4;11437:27;;;;;;;;;;;;11069:402;;;:::o;7209:1128:7:-;7471:22;7496:32;7526:1;7496:12;:18;7509:4;7496:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;7471:57;;7538:18;7559:17;:26;7577:7;7559:26;;;;;;;;;;;;7538:47;;7703:14;7689:10;:28;;7685:323;;;7733:19;7755:12;:18;7768:4;7755:18;;;;;;;;;;;;;;;7774:14;7755:34;;;;;;;;;;;;;;;;;;7733:56;;7837:11;7804:12;:18;7817:4;7804:18;;;;;;;;;;;;;;;7823:10;7804:30;;;;;;;;;;;;;;;;;:44;;;;7953:10;7920:17;:30;7938:11;7920:30;;;;;;;;;;;:43;;;;7685:323;;8094:12;:18;8107:4;8094:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;7209:1128;;;;:::o;6055:183::-;6168:12;:16;6181:2;6168:16;;;;;;;;;;;;;;;:23;;;;6139:17;:26;6157:7;6139:26;;;;;;;;;;;:52;;;;6201:12;:16;6214:2;6201:16;;;;;;;;;;;;;;;6223:7;6201:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6201:30:7;;;;;;;;;;;;;;;;;;;;;;6055:183;;:::o;11845:301:6:-;11962:4;11942:24;;:16;11950:7;11942;:16::i;:::-;:24;;;11934:33;;;;;;;;11977:23;11992:7;11977:14;:23::i;:::-;12033:2;12010:11;:20;12022:7;12010:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12069:7;12065:2;12050:27;;12059:4;12050:27;;;;;;;;;;;;11845:301;;;:::o;9106:278::-;9191:1;9177:16;;:2;:16;;;;9169:25;;;;;;;;9213:16;9221:7;9213;:16::i;:::-;9212:17;9204:26;;;;;;;;9264:2;9241:11;:20;9253:7;9241:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9300:28;9326:1;9300:17;:21;9318:2;9300:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9276:17;:21;9294:2;9276:21;;;;;;;;;;;;;;;:52;;;;9369:7;9365:2;9344:33;;9361:1;9344:33;;;;;;;;;;;;9106:278;;:::o;6433:161:7:-;6536:10;:17;;;;6509:15;:24;6525:7;6509:24;;;;;;;;;;;:44;;;;6563:10;6579:7;6563:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6563:24:7;;;;;;;;;;;;;;;;;;;;;;6433:161;:::o;10121:305:6:-;10215:5;10195:25;;:16;10203:7;10195;:16::i;:::-;:25;;;10187:34;;;;;;;;10232:23;10247:7;10232:14;:23::i;:::-;10293:31;10322:1;10293:17;:24;10311:5;10293:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;10266:17;:24;10284:5;10266:24;;;;;;;;;;;;;;;:58;;;;10365:1;10334:11;:20;10346:7;10334:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;10411:7;10407:1;10383:36;;10392:5;10383:36;;;;;;;;;;;;10121:305;;:::o;8625:1064:7:-;8874:22;8899:24;8921:1;8899:10;:17;;;;:21;;:24;;;;:::i;:::-;8874:49;;8933:18;8954:15;:24;8970:7;8954:24;;;;;;;;;;;;8933:45;;9300:19;9322:10;9333:14;9322:26;;;;;;;;;;;;;;;;;;9300:48;;9384:11;9359:10;9370;9359:22;;;;;;;;;;;;;;;;;:36;;;;9494:10;9463:15;:28;9479:11;9463:28;;;;;;;;;;;:41;;;;9625:10;:19;;;;;;;;;;;;:::i;:::-;;9681:1;9654:15;:24;9670:7;9654:24;;;;;;;;;;;:28;;;;8625:1064;;;;:::o;260:175:10:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;542:413:20:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;13173:171:6:-;13272:1;13236:38;;:15;:24;13252:7;13236:24;;;;;;;;;;;;;;;;;;;;;:38;;;;13232:106;;;13325:1;13290:15;:24;13306:7;13290:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;13232:106;13173:171;:::o;439:1708:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/**\n * Phat Cats - Crypto-Cards\n *  - https://crypto-cards.io\n *  - https://phatcats.co\n *\n * Copyright 2019 (c) Phat Cats, Inc.\n */\n\npragma solidity 0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\";\nimport \"./CryptoCardsERC721Batched.sol\";\n\n/**\n * @title Crypto-Cards ERC721 Pack Token\n * ERC721-compliant token representing individual Packs\n */\ncontract CryptoCardsPackToken is CryptoCardsERC721Batched, MinterRole, Ownable {\n\n    //\n    // Storage\n    //\n    uint256 internal _totalMintedPacks;\n    mapping(uint256 => string) internal _packData;\n\n    //\n    // Initialize\n    //\n    constructor() public CryptoCardsERC721Batched(\"Crypto-Cards Packs\", \"PACKS\", \"https://crypto-cards.io/pack-info/\") { }\n\n    //\n    // Public\n    //\n\n    function packDataById(uint256 tokenId) public view returns (string memory) {\n        require(_exists(tokenId), \"Invalid tokenId supplied\");\n        return _packData[tokenId];\n    }\n\n    function totalMintedPacks() public view returns (uint256) {\n        return _totalMintedPacks;\n    }\n\n    //\n    // Only Minter\n    //   Note: Minter is the Pack-Controller Contract, which is the only Minter ever assigned.\n    //         Only the Minter can add new minters, and as the Pack-Controller Contract has no code for\n    //         assigning new Minters, no new minters can ever be added.\n    //\n\n    function mintPack(address to, string memory packData) public onlyMinter returns (uint256) {\n        _totalMintedPacks = _totalMintedPacks + 1;\n        uint256 tokenId = _totalMintedPacks;\n        _mint(to, tokenId);\n        _packData[tokenId] = packData;\n        return tokenId;\n    }\n\n    function burnPack(address from, uint256 tokenId) public onlyMinter {\n        _burn(from, tokenId);\n        _packData[tokenId] = \"\";\n    }\n\n    function tokenTransfer(address from, address to, uint256 tokenId) public onlyMinter {\n        _transferFrom(from, to, tokenId);\n    }\n\n    //\n    // Only Owner\n    //\n\n    function setProxyRegistryAddress(address proxy) public onlyOwner {\n        _setProxyRegistryAddress(proxy);\n    }\n}\n",
  "sourcePath": "/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsPackToken.sol",
  "ast": {
    "absolutePath": "/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsPackToken.sol",
    "exportedSymbols": {
      "CryptoCardsPackToken": [
        1596
      ]
    },
    "id": 1597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1458,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "134:22:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1459,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 5361,
        "src": "158:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 1460,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 5055,
        "src": "222:69:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsERC721Batched.sol",
        "file": "./CryptoCardsERC721Batched.sol",
        "id": 1461,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 1392,
        "src": "292:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1462,
              "name": "CryptoCardsERC721Batched",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1391,
              "src": "472:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CryptoCardsERC721Batched_$1391",
                "typeString": "contract CryptoCardsERC721Batched"
              }
            },
            "id": 1463,
            "nodeType": "InheritanceSpecifier",
            "src": "472:24:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1464,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5054,
              "src": "498:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$5054",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1465,
            "nodeType": "InheritanceSpecifier",
            "src": "498:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1466,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5360,
              "src": "510:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5360",
                "typeString": "contract Ownable"
              }
            },
            "id": 1467,
            "nodeType": "InheritanceSpecifier",
            "src": "510:7:4"
          }
        ],
        "contractDependencies": [
          1391,
          2714,
          3101,
          5054,
          5106,
          5116,
          5360,
          5532,
          5559
        ],
        "contractKind": "contract",
        "documentation": "@title Crypto-Cards ERC721 Pack Token\nERC721-compliant token representing individual Packs",
        "fullyImplemented": true,
        "id": 1596,
        "linearizedBaseContracts": [
          1596,
          5360,
          5054,
          1391,
          3101,
          5559,
          2714,
          5532,
          5106,
          5116
        ],
        "name": "CryptoCardsPackToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1469,
            "name": "_totalMintedPacks",
            "nodeType": "VariableDeclaration",
            "scope": 1596,
            "src": "554:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1473,
            "name": "_packData",
            "nodeType": "VariableDeclaration",
            "scope": 1596,
            "src": "594:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1472,
              "keyType": {
                "id": 1470,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "602:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "594:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1471,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "613:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1481,
              "nodeType": "Block",
              "src": "793:3:4",
              "statements": []
            },
            "documentation": null,
            "id": 1482,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f2d4361726473205061636b73",
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "724:20:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bc20962fb4dd91f63acc24214dc0975a55804f166c488aee96bdb60df0376497",
                      "typeString": "literal_string \"Crypto-Cards Packs\""
                    },
                    "value": "Crypto-Cards Packs"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5041434b53",
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "746:7:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c8119c7ea2da00ff38714598bf1ecd65e8caa141e01fe6be1262e73a258f8757",
                      "typeString": "literal_string \"PACKS\""
                    },
                    "value": "PACKS"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f63727970746f2d63617264732e696f2f7061636b2d696e666f2f",
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "755:36:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e678d9789dfc53e7d20c403cbb06b5a796b67743995ef3991ad6791192a485cc",
                      "typeString": "literal_string \"https://crypto-cards.io/pack-info/\""
                    },
                    "value": "https://crypto-cards.io/pack-info/"
                  }
                ],
                "id": 1479,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1475,
                  "name": "CryptoCardsERC721Batched",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1391,
                  "src": "699:24:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CryptoCardsERC721Batched_$1391_$",
                    "typeString": "type(contract CryptoCardsERC721Batched)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "699:93:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:4"
            },
            "returnParameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:4"
            },
            "scope": 1596,
            "src": "678:118:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1500,
              "nodeType": "Block",
              "src": "906:105:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1491,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "932:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1490,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2381,
                          "src": "924:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "924:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e496420737570706c696564",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "942:26:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e445703d68b10510aa1a49695959366bfbfb1f4b19e852c8ab7c1041faeb98",
                          "typeString": "literal_string \"Invalid tokenId supplied\""
                        },
                        "value": "Invalid tokenId supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e445703d68b10510aa1a49695959366bfbfb1f4b19e852c8ab7c1041faeb98",
                          "typeString": "literal_string \"Invalid tokenId supplied\""
                        }
                      ],
                      "id": 1489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5612,
                        5613
                      ],
                      "referencedDeclaration": 5613,
                      "src": "916:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "916:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1496,
                      "name": "_packData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1473,
                      "src": "986:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1498,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1497,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "996:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "986:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1488,
                  "id": 1499,
                  "nodeType": "Return",
                  "src": "979:25:4"
                }
              ]
            },
            "documentation": null,
            "id": 1501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "packDataById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "853:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:17:4"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "891:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:15:4"
            },
            "scope": 1596,
            "src": "831:180:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1508,
              "nodeType": "Block",
              "src": "1075:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1506,
                    "name": "_totalMintedPacks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1469,
                    "src": "1092:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1505,
                  "id": 1507,
                  "nodeType": "Return",
                  "src": "1085:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMintedPacks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:2:4"
            },
            "returnParameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "1066:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:9:4"
            },
            "scope": 1596,
            "src": "1017:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1543,
              "nodeType": "Block",
              "src": "1517:194:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1520,
                      "name": "_totalMintedPacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "1527:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1521,
                        "name": "_totalMintedPacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "1547:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1547:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1527:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:41:4"
                },
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1543,
                      "src": "1578:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1578:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1529,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1528,
                    "name": "_totalMintedPacks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1469,
                    "src": "1596:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1578:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1531,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "1629:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1532,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "1633:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1530,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2884
                      ],
                      "referencedDeclaration": 2884,
                      "src": "1623:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1535,
                        "name": "_packData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1651:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1537,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1536,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "1661:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1651:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1538,
                      "name": "packData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1513,
                      "src": "1672:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1651:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1541,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1527,
                    "src": "1697:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1519,
                  "id": 1542,
                  "nodeType": "Return",
                  "src": "1690:14:4"
                }
              ]
            },
            "documentation": null,
            "id": 1544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1516,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1515,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1488:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1488:10:4"
              }
            ],
            "name": "mintPack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1445:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1513,
                  "name": "packData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1457:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1444:36:4"
            },
            "returnParameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1508:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:9:4"
            },
            "scope": 1596,
            "src": "1427:284:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1564,
              "nodeType": "Block",
              "src": "1784:70:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1554,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "1800:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1555,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "1806:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1553,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2938,
                        2552
                      ],
                      "referencedDeclaration": 2938,
                      "src": "1794:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:20:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1558,
                        "name": "_packData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1824:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1560,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1559,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "1834:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1824:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "",
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1845:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "src": "1824:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 1565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1551,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1550,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1773:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1773:10:4"
              }
            ],
            "name": "burnPack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1546,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "1735:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1548,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "1749:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:31:4"
            },
            "returnParameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:0:4"
            },
            "scope": 1596,
            "src": "1717:137:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1582,
              "nodeType": "Block",
              "src": "1944:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "1968:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "1974:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "1978:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1576,
                      "name": "_transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2832
                      ],
                      "referencedDeclaration": 2832,
                      "src": "1954:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:32:4"
                }
              ]
            },
            "documentation": null,
            "id": 1583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1574,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1573,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1933:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1933:10:4"
              }
            ],
            "name": "tokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1883:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1897:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1909:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1882:43:4"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1944:0:4"
            },
            "scope": 1596,
            "src": "1860:133:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1594,
              "nodeType": "Block",
              "src": "2097:48:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "2132:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1590,
                      "name": "_setProxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "2107:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:31:4"
                }
              ]
            },
            "documentation": null,
            "id": 1595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1587,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5293,
                  "src": "2087:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2087:9:4"
              }
            ],
            "name": "setProxyRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "name": "proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1595,
                  "src": "2065:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2064:15:4"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:0:4"
            },
            "scope": 1596,
            "src": "2032:113:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1597,
        "src": "439:1708:4"
      }
    ],
    "src": "134:2014:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsPackToken.sol",
    "exportedSymbols": {
      "CryptoCardsPackToken": [
        1596
      ]
    },
    "id": 1597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1458,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "134:22:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1459,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 5361,
        "src": "158:63:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 1460,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 5055,
        "src": "222:69:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/robsecord/workspace/Ethereum/CryptoCards/cryptocards_token_contracts/contracts/CryptoCardsERC721Batched.sol",
        "file": "./CryptoCardsERC721Batched.sol",
        "id": 1461,
        "nodeType": "ImportDirective",
        "scope": 1597,
        "sourceUnit": 1392,
        "src": "292:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1462,
              "name": "CryptoCardsERC721Batched",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1391,
              "src": "472:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CryptoCardsERC721Batched_$1391",
                "typeString": "contract CryptoCardsERC721Batched"
              }
            },
            "id": 1463,
            "nodeType": "InheritanceSpecifier",
            "src": "472:24:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1464,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5054,
              "src": "498:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$5054",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1465,
            "nodeType": "InheritanceSpecifier",
            "src": "498:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1466,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5360,
              "src": "510:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5360",
                "typeString": "contract Ownable"
              }
            },
            "id": 1467,
            "nodeType": "InheritanceSpecifier",
            "src": "510:7:4"
          }
        ],
        "contractDependencies": [
          1391,
          2714,
          3101,
          5054,
          5106,
          5116,
          5360,
          5532,
          5559
        ],
        "contractKind": "contract",
        "documentation": "@title Crypto-Cards ERC721 Pack Token\nERC721-compliant token representing individual Packs",
        "fullyImplemented": true,
        "id": 1596,
        "linearizedBaseContracts": [
          1596,
          5360,
          5054,
          1391,
          3101,
          5559,
          2714,
          5532,
          5106,
          5116
        ],
        "name": "CryptoCardsPackToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1469,
            "name": "_totalMintedPacks",
            "nodeType": "VariableDeclaration",
            "scope": 1596,
            "src": "554:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1473,
            "name": "_packData",
            "nodeType": "VariableDeclaration",
            "scope": 1596,
            "src": "594:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1472,
              "keyType": {
                "id": 1470,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "602:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "594:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1471,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "613:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1481,
              "nodeType": "Block",
              "src": "793:3:4",
              "statements": []
            },
            "documentation": null,
            "id": 1482,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f2d4361726473205061636b73",
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "724:20:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bc20962fb4dd91f63acc24214dc0975a55804f166c488aee96bdb60df0376497",
                      "typeString": "literal_string \"Crypto-Cards Packs\""
                    },
                    "value": "Crypto-Cards Packs"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5041434b53",
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "746:7:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c8119c7ea2da00ff38714598bf1ecd65e8caa141e01fe6be1262e73a258f8757",
                      "typeString": "literal_string \"PACKS\""
                    },
                    "value": "PACKS"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f63727970746f2d63617264732e696f2f7061636b2d696e666f2f",
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "755:36:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e678d9789dfc53e7d20c403cbb06b5a796b67743995ef3991ad6791192a485cc",
                      "typeString": "literal_string \"https://crypto-cards.io/pack-info/\""
                    },
                    "value": "https://crypto-cards.io/pack-info/"
                  }
                ],
                "id": 1479,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1475,
                  "name": "CryptoCardsERC721Batched",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1391,
                  "src": "699:24:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CryptoCardsERC721Batched_$1391_$",
                    "typeString": "type(contract CryptoCardsERC721Batched)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "699:93:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:4"
            },
            "returnParameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:4"
            },
            "scope": 1596,
            "src": "678:118:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1500,
              "nodeType": "Block",
              "src": "906:105:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1491,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "932:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1490,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2381,
                          "src": "924:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "924:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e496420737570706c696564",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "942:26:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e445703d68b10510aa1a49695959366bfbfb1f4b19e852c8ab7c1041faeb98",
                          "typeString": "literal_string \"Invalid tokenId supplied\""
                        },
                        "value": "Invalid tokenId supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e445703d68b10510aa1a49695959366bfbfb1f4b19e852c8ab7c1041faeb98",
                          "typeString": "literal_string \"Invalid tokenId supplied\""
                        }
                      ],
                      "id": 1489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5612,
                        5613
                      ],
                      "referencedDeclaration": 5613,
                      "src": "916:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "916:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1496,
                      "name": "_packData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1473,
                      "src": "986:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1498,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1497,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "996:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "986:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1488,
                  "id": 1499,
                  "nodeType": "Return",
                  "src": "979:25:4"
                }
              ]
            },
            "documentation": null,
            "id": 1501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "packDataById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "853:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:17:4"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "891:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:15:4"
            },
            "scope": 1596,
            "src": "831:180:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1508,
              "nodeType": "Block",
              "src": "1075:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1506,
                    "name": "_totalMintedPacks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1469,
                    "src": "1092:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1505,
                  "id": 1507,
                  "nodeType": "Return",
                  "src": "1085:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 1509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalMintedPacks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:2:4"
            },
            "returnParameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "1066:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:9:4"
            },
            "scope": 1596,
            "src": "1017:99:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1543,
              "nodeType": "Block",
              "src": "1517:194:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1520,
                      "name": "_totalMintedPacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "1527:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1521,
                        "name": "_totalMintedPacks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "1547:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1547:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1527:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:41:4"
                },
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1543,
                      "src": "1578:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1578:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1529,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1528,
                    "name": "_totalMintedPacks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1469,
                    "src": "1596:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1578:35:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1531,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "1629:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1532,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "1633:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1530,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2884
                      ],
                      "referencedDeclaration": 2884,
                      "src": "1623:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1535,
                        "name": "_packData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1651:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1537,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1536,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "1661:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1651:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1538,
                      "name": "packData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1513,
                      "src": "1672:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1651:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:29:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1541,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1527,
                    "src": "1697:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1519,
                  "id": 1542,
                  "nodeType": "Return",
                  "src": "1690:14:4"
                }
              ]
            },
            "documentation": null,
            "id": 1544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1516,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1515,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1488:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1488:10:4"
              }
            ],
            "name": "mintPack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1445:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1513,
                  "name": "packData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1457:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1444:36:4"
            },
            "returnParameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1544,
                  "src": "1508:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:9:4"
            },
            "scope": 1596,
            "src": "1427:284:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1564,
              "nodeType": "Block",
              "src": "1784:70:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1554,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "1800:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1555,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "1806:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1553,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2938,
                        2552
                      ],
                      "referencedDeclaration": 2938,
                      "src": "1794:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:20:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1558,
                        "name": "_packData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1824:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1560,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1559,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "1834:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1824:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "",
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1845:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "src": "1824:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 1565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1551,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1550,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1773:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1773:10:4"
              }
            ],
            "name": "burnPack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1546,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "1735:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1548,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "1749:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:31:4"
            },
            "returnParameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:0:4"
            },
            "scope": 1596,
            "src": "1717:137:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1582,
              "nodeType": "Block",
              "src": "1944:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "1968:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "1974:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "1978:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1576,
                      "name": "_transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2832
                      ],
                      "referencedDeclaration": 2832,
                      "src": "1954:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:32:4"
                }
              ]
            },
            "documentation": null,
            "id": 1583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1574,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1573,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4987,
                  "src": "1933:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1933:10:4"
              }
            ],
            "name": "tokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1883:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1897:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "1909:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1882:43:4"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1944:0:4"
            },
            "scope": 1596,
            "src": "1860:133:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1594,
              "nodeType": "Block",
              "src": "2097:48:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "2132:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1590,
                      "name": "_setProxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "2107:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:31:4"
                }
              ]
            },
            "documentation": null,
            "id": 1595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1587,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5293,
                  "src": "2087:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2087:9:4"
              }
            ],
            "name": "setProxyRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "name": "proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1595,
                  "src": "2065:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2064:15:4"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:0:4"
            },
            "scope": 1596,
            "src": "2032:113:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1597,
        "src": "439:1708:4"
      }
    ],
    "src": "134:2014:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0x4187831f3a75da298b400e245a588d6a6d6193fe794473a7129647592324faa4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "BatchTransfer",
          "type": "event",
          "signature": "0x4187831f3a75da298b400e245a588d6a6d6193fe794473a7129647592324faa4"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0x01b9707dD7782bB441ec57C1B62D669896859096",
      "transactionHash": "0x3587c54c8a1682077558085b16a27009b97e55c8895c58f4eac62507f7400acb"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-03T02:12:08.428Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "fastTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Crypto-Cards ERC721 Pack Token ERC721-compliant token representing individual Packs"
  },
  "userdoc": {
    "methods": {}
  }
}